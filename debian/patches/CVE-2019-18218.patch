Index: file-5.22+15/src/cdf.c
===================================================================
--- file-5.22+15.orig/src/cdf.c	2019-10-23 14:49:04.532257249 +0200
+++ file-5.22+15/src/cdf.c	2019-10-23 14:49:04.528257248 +0200
@@ -850,8 +850,9 @@
 		    i, inp[i].pi_id, inp[i].pi_type, q - p, offs));
 		if (inp[i].pi_type & CDF_VECTOR) {
 			nelements = CDF_GETUINT32(q, 1);
-			if (nelements == 0) {
-				DPRINTF(("CDF_VECTOR with nelements == 0\n"));
+			if (nelements > CDF_ELEMENT_LIMIT || nelements == 0) {
+				DPRINTF(("CDF_VECTOR with nelements == %"
+				    SIZE_T_FORMAT "u\n", nelements));
 				goto out;
 			}
 			o = 2;
@@ -926,8 +927,6 @@
 				*info = inp;
 				inp = *info + nelem;
 			}
-			DPRINTF(("nelements = %" SIZE_T_FORMAT "u\n",
-			    nelements));
 			for (j = 0; j < nelements && i < sh.sh_properties;
 			    j++, i++)
 			{
Index: file-5.22+15/src/cdf.h
===================================================================
--- file-5.22+15.orig/src/cdf.h	2019-10-23 14:49:04.532257249 +0200
+++ file-5.22+15/src/cdf.h	2019-10-23 14:49:04.528257248 +0200
@@ -48,6 +48,7 @@
 typedef int32_t cdf_secid_t;
 
 #define CDF_LOOP_LIMIT					10000
+#define CDF_ELEMENT_LIMIT				100000
 
 #define CDF_SECID_NULL					0
 #define CDF_SECID_FREE					-1
